
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'moduleCOMMA_ ELSE_ EQUAL_ FALSE FATARROW_ FN_ IF_ JUST LPAREN_ MINUS_ NAME NOTHING NOT_ NUMBER OP PLUS_ RPAREN_ SEMICOLON_ STRING THEN_ TK_SYMB_14_ TK_SYMB_15_ TRUE TYPENAMEatom : NUMBERatom : STRINGatom : TRUEatom : FALSEatom : TYPENAMEatom : NAMEatom : listatom : tuplesdefargs : NAMEdefargs : NAME COMMA_ defargselem : lambdaelem : valueelem : value OP valueelem : ifexprelem : PLUS_ valueelem : MINUS_ valueelem : NOT_ valueelem : JUST valueelem : NOTHINGexpr : elemfargs : elemfargs : elem COMMA_ fargsfcall : value LPAREN_ RPAREN_fcall : value LPAREN_ fargs RPAREN_fundef : NAME LPAREN_ defargs RPAREN_ EQUAL_ exprifexpr : IF_ value THEN_ elem ELSE_ elemitems : elemitems : elem COMMA_ itemsitems : elem COMMA_ items COMMA_lambda : FN_ LPAREN_ defargs RPAREN_ FATARROW_ exprlist : TK_SYMB_14_ TK_SYMB_15_list : TK_SYMB_14_ items TK_SYMB_15_module : statement SEMICOLON_module : statement SEMICOLON_ modulestatement : vardefstatement : fundeftuple : LPAREN_ RPAREN_tuple : LPAREN_ items RPAREN_tuples : LPAREN_ RPAREN_tuples : LPAREN_ items RPAREN_value : atomvalue : fcallvalue : LPAREN_ expr RPAREN_vardef : NAME EQUAL_ expr'
    
_lr_action_items = {'NAME':([0,6,7,8,16,17,18,19,22,25,33,36,37,42,51,60,61,64,66,72,74,],[5,5,10,34,10,10,10,10,10,10,10,10,10,34,34,10,10,10,10,10,10,]),'$end':([1,6,9,],[0,-33,-34,]),'SEMICOLON_':([2,3,4,10,11,12,13,14,15,20,23,24,26,27,28,29,30,31,32,38,39,40,41,44,48,53,54,58,59,62,65,70,75,76,],[6,-35,-36,-6,-44,-20,-11,-12,-14,-19,-41,-42,-1,-2,-3,-4,-5,-7,-8,-15,-16,-17,-18,-39,-31,-13,-23,-43,-40,-32,-24,-25,-30,-26,]),'EQUAL_':([5,52,],[7,64,]),'LPAREN_':([5,7,10,14,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,39,40,41,44,47,48,53,54,58,59,60,61,62,64,65,66,72,74,],[8,22,-6,37,22,22,22,22,42,22,-41,-42,22,-1,-2,-3,-4,-5,-7,-8,22,22,22,37,37,37,37,-39,37,-31,37,-23,-43,-40,22,22,-32,22,-24,22,22,22,]),'PLUS_':([7,22,33,37,60,61,64,66,72,74,],[16,16,16,16,16,16,16,16,16,16,]),'MINUS_':([7,22,33,37,60,61,64,66,72,74,],[17,17,17,17,17,17,17,17,17,17,]),'NOT_':([7,22,33,37,60,61,64,66,72,74,],[18,18,18,18,18,18,18,18,18,18,]),'JUST':([7,22,33,37,60,61,64,66,72,74,],[19,19,19,19,19,19,19,19,19,19,]),'NOTHING':([7,22,33,37,60,61,64,66,72,74,],[20,20,20,20,20,20,20,20,20,20,]),'FN_':([7,22,33,37,60,61,64,66,72,74,],[21,21,21,21,21,21,21,21,21,21,]),'IF_':([7,22,33,37,60,61,64,66,72,74,],[25,25,25,25,25,25,25,25,25,25,]),'NUMBER':([7,16,17,18,19,22,25,33,36,37,60,61,64,66,72,74,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'STRING':([7,16,17,18,19,22,25,33,36,37,60,61,64,66,72,74,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'TRUE':([7,16,17,18,19,22,25,33,36,37,60,61,64,66,72,74,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'FALSE':([7,16,17,18,19,22,25,33,36,37,60,61,64,66,72,74,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'TYPENAME':([7,16,17,18,19,22,25,33,36,37,60,61,64,66,72,74,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'TK_SYMB_14_':([7,16,17,18,19,22,25,33,36,37,60,61,64,66,72,74,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'OP':([10,14,23,24,26,27,28,29,30,31,32,44,48,54,58,59,62,65,],[-6,36,-41,-42,-1,-2,-3,-4,-5,-7,-8,-39,-31,-23,-43,-40,-32,-24,]),'COMMA_':([10,12,13,14,15,20,23,24,26,27,28,29,30,31,32,34,38,39,40,41,44,46,48,50,53,54,56,58,59,62,65,68,73,75,76,],[-6,-20,-11,-12,-14,-19,-41,-42,-1,-2,-3,-4,-5,-7,-8,51,-15,-16,-17,-18,-39,60,-31,60,-13,-23,66,-43,-40,-32,-24,73,-29,-30,-26,]),'RPAREN_':([10,12,13,14,15,20,22,23,24,26,27,28,29,30,31,32,34,35,37,38,39,40,41,43,44,45,46,48,50,53,54,55,56,57,58,59,62,63,65,68,71,73,75,76,],[-6,-20,-11,-12,-14,-19,44,-41,-42,-1,-2,-3,-4,-5,-7,-8,-9,52,54,-15,-16,-17,-18,58,-39,59,-20,-31,-27,-13,-23,65,-21,67,-43,-40,-32,-10,-24,-28,-22,-29,-30,-26,]),'TK_SYMB_15_':([10,12,13,14,15,20,23,24,26,27,28,29,30,31,32,33,38,39,40,41,44,48,49,50,53,54,58,59,62,65,68,73,75,76,],[-6,-20,-11,-12,-14,-19,-41,-42,-1,-2,-3,-4,-5,-7,-8,48,-15,-16,-17,-18,-39,-31,62,-27,-13,-23,-43,-40,-32,-24,-28,-29,-30,-26,]),'ELSE_':([10,12,13,14,15,20,23,24,26,27,28,29,30,31,32,38,39,40,41,44,48,53,54,58,59,62,65,69,75,76,],[-6,-20,-11,-12,-14,-19,-41,-42,-1,-2,-3,-4,-5,-7,-8,-15,-16,-17,-18,-39,-31,-13,-23,-43,-40,-32,-24,74,-30,-26,]),'THEN_':([10,23,24,26,27,28,29,30,31,32,44,47,48,54,58,59,62,65,],[-6,-41,-42,-1,-2,-3,-4,-5,-7,-8,-39,61,-31,-23,-43,-40,-32,-24,]),'FATARROW_':([67,],[72,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'module':([0,6,],[1,9,]),'statement':([0,6,],[2,2,]),'vardef':([0,6,],[3,3,]),'fundef':([0,6,],[4,4,]),'expr':([7,22,64,72,],[11,43,70,75,]),'elem':([7,22,33,37,60,61,64,66,72,74,],[12,46,50,56,50,69,12,56,12,76,]),'lambda':([7,22,33,37,60,61,64,66,72,74,],[13,13,13,13,13,13,13,13,13,13,]),'value':([7,16,17,18,19,22,25,33,36,37,60,61,64,66,72,74,],[14,38,39,40,41,14,47,14,53,14,14,14,14,14,14,14,]),'ifexpr':([7,22,33,37,60,61,64,66,72,74,],[15,15,15,15,15,15,15,15,15,15,]),'atom':([7,16,17,18,19,22,25,33,36,37,60,61,64,66,72,74,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'fcall':([7,16,17,18,19,22,25,33,36,37,60,61,64,66,72,74,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'list':([7,16,17,18,19,22,25,33,36,37,60,61,64,66,72,74,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'tuples':([7,16,17,18,19,22,25,33,36,37,60,61,64,66,72,74,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'defargs':([8,42,51,],[35,57,63,]),'items':([22,33,60,],[45,49,68,]),'fargs':([37,66,],[55,71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> module","S'",1,None,None,None),
  ('atom -> NUMBER','atom',1,'p_atom_1','ply.py',126),
  ('atom -> STRING','atom',1,'p_atom_2','ply.py',126),
  ('atom -> TRUE','atom',1,'p_atom_3','ply.py',126),
  ('atom -> FALSE','atom',1,'p_atom_4','ply.py',126),
  ('atom -> TYPENAME','atom',1,'p_atom_5','ply.py',126),
  ('atom -> NAME','atom',1,'p_atom_6','ply.py',126),
  ('atom -> list','atom',1,'p_atom_7','ply.py',126),
  ('atom -> tuples','atom',1,'p_atom_8','ply.py',126),
  ('defargs -> NAME','defargs',1,'p_defargs_1','ply.py',126),
  ('defargs -> NAME COMMA_ defargs','defargs',3,'p_defargs_2','ply.py',126),
  ('elem -> lambda','elem',1,'p_elem_1','ply.py',126),
  ('elem -> value','elem',1,'p_elem_2','ply.py',126),
  ('elem -> value OP value','elem',3,'p_elem_3','ply.py',126),
  ('elem -> ifexpr','elem',1,'p_elem_4','ply.py',126),
  ('elem -> PLUS_ value','elem',2,'p_elem_5','ply.py',126),
  ('elem -> MINUS_ value','elem',2,'p_elem_6','ply.py',126),
  ('elem -> NOT_ value','elem',2,'p_elem_7','ply.py',126),
  ('elem -> JUST value','elem',2,'p_elem_8','ply.py',126),
  ('elem -> NOTHING','elem',1,'p_elem_9','ply.py',126),
  ('expr -> elem','expr',1,'p_expr_1','ply.py',126),
  ('fargs -> elem','fargs',1,'p_fargs_1','ply.py',126),
  ('fargs -> elem COMMA_ fargs','fargs',3,'p_fargs_2','ply.py',126),
  ('fcall -> value LPAREN_ RPAREN_','fcall',3,'p_fcall_1','ply.py',126),
  ('fcall -> value LPAREN_ fargs RPAREN_','fcall',4,'p_fcall_2','ply.py',126),
  ('fundef -> NAME LPAREN_ defargs RPAREN_ EQUAL_ expr','fundef',6,'p_fundef_1','ply.py',126),
  ('ifexpr -> IF_ value THEN_ elem ELSE_ elem','ifexpr',6,'p_ifexpr_1','ply.py',126),
  ('items -> elem','items',1,'p_items_1','ply.py',126),
  ('items -> elem COMMA_ items','items',3,'p_items_2','ply.py',126),
  ('items -> elem COMMA_ items COMMA_','items',4,'p_items_3','ply.py',126),
  ('lambda -> FN_ LPAREN_ defargs RPAREN_ FATARROW_ expr','lambda',6,'p_lambda_1','ply.py',126),
  ('list -> TK_SYMB_14_ TK_SYMB_15_','list',2,'p_list_1','ply.py',126),
  ('list -> TK_SYMB_14_ items TK_SYMB_15_','list',3,'p_list_2','ply.py',126),
  ('module -> statement SEMICOLON_','module',2,'p_module_1','ply.py',126),
  ('module -> statement SEMICOLON_ module','module',3,'p_module_2','ply.py',126),
  ('statement -> vardef','statement',1,'p_statement_1','ply.py',126),
  ('statement -> fundef','statement',1,'p_statement_2','ply.py',126),
  ('tuple -> LPAREN_ RPAREN_','tuple',2,'p_tuple_1','ply.py',126),
  ('tuple -> LPAREN_ items RPAREN_','tuple',3,'p_tuple_2','ply.py',126),
  ('tuples -> LPAREN_ RPAREN_','tuples',2,'p_tuples_1','ply.py',126),
  ('tuples -> LPAREN_ items RPAREN_','tuples',3,'p_tuples_2','ply.py',126),
  ('value -> atom','value',1,'p_value_1','ply.py',126),
  ('value -> fcall','value',1,'p_value_2','ply.py',126),
  ('value -> LPAREN_ expr RPAREN_','value',3,'p_value_3','ply.py',126),
  ('vardef -> NAME EQUAL_ expr','vardef',3,'p_vardef_1','ply.py',126),
]
